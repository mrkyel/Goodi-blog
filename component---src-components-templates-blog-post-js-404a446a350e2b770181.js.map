{"version":3,"sources":["webpack:///./src/components/atoms/tagButton.js","webpack:///./src/components/molecules/tagList.js","webpack:///./src/components/molecules/recentPostItem.js","webpack:///./src/components/organisms/recentPostList.js","webpack:///./src/components/templates/blogPost.js"],"names":["StyledLink","styled","Link","StyledButton","span","props","theme","tag","text","back","TagButton","link","children","to","Container","div","TagList","data","map","node","key","display","Cover","image","recentpostitem","RecentPostItem","fields","slug","frontmatter","cover","childImageSharp","fixed","src","line","title","date","PostList","recentpostlist","header","category","RecentPostList","id","index","PostHeader","blogpost","hr","info","PostContent","content","default","quote","PostFooter","BlogPost","render","post","this","markdownRemark","siteTitle","site","siteMetadata","tags","recent","pageContext","location","activeMenu","description","excerpt","fluid","keywords","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery"],"mappings":"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","file":"component---src-components-templates-blog-post-js-404a446a350e2b770181.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst StyledLink = styled(Link)`\r\n    margin: 5px 10px 5px 0;\r\n`;\r\n\r\nconst StyledButton = styled.span`\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n\r\n    color: ${props => props.theme.tag.text};\r\n    background-color: ${props => props.theme.tag.back};\r\n    font-size: 15px;\r\n\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\nconst TagButton = ({ link, children }) => {\r\n    return (\r\n        <StyledLink to={link}>\r\n            <StyledButton>{children}</StyledButton>\r\n        </StyledLink>\r\n    );\r\n};\r\n\r\nexport default TagButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TagButton from \"../atoms/tagButton\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst TagList = ({ data }) => {\r\n    return (\r\n        <Container>\r\n            {data &&\r\n                data.map(node => (\r\n                    <TagButton key={node} link={`tags/${node}`}>\r\n                        #{node}\r\n                    </TagButton>\r\n                ))}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport TextEllipsis from \"components/atoms/textEllipsis\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0 10px 10px 10px;\r\n    width: 100%;\r\n\r\n    @media all and (min-width: 992px) {\r\n        display: ${props => props.display || \"inline-block\"};\r\n        width: 25%;\r\n    }\r\n`;\r\n\r\nconst Cover = styled(Link)`\r\n    display: inline-block;\r\n    margin: 0 !important;\r\n    width: 100%;\r\n    height: 100px;\r\n    background-image: url(${props => props.image});\r\n    background-size: cover;\r\n    background-position: 50% 50%;\r\n    border-radius: 10px;\r\n\r\n    &:hover {\r\n        text-decoration: underline #fff;\r\n    }\r\n\r\n    div {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-end;\r\n        height: 100%;\r\n        background-color: rgba(0, 0, 0, 0.6);\r\n        color: ${props => props.theme.recentpostitem.text};\r\n        padding: 10px;\r\n        border-radius: inherit;\r\n\r\n        p {\r\n            font-weight: bold;\r\n        }\r\n\r\n        span {\r\n            font-size: 12px;\r\n        }\r\n    }\r\n\r\n    @media all and (min-width: 992px) {\r\n        height: 120px;\r\n    }\r\n`;\r\n\r\nconst RecentPostItem = ({ data }) => {\r\n    const link = data.node.fields.slug;\r\n    const node = data.node.frontmatter;\r\n    const image = !!node.cover ? node.cover.childImageSharp.fixed.src : \"\";\r\n    return (\r\n        <Container>\r\n            <Cover image={image} to={link}>\r\n                <div>\r\n                    <TextEllipsis line={2} text={node.title} />\r\n                    <span>{node.date}</span>\r\n                </div>\r\n            </Cover>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RecentPostItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\nimport RecentPostItem from \"components/molecules/recentPostItem\";\r\n\r\nconst PostList = styled.div`\r\n    #title {\r\n        font-weight: bold;\r\n        margin: 0;\r\n        padding: 0 10px 10px 10px;\r\n        color: ${props => props.theme.recentpostlist.header};\r\n\r\n        a {\r\n            color: ${props => props.theme.recentpostlist.category};\r\n            &:hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst RecentPostList = ({ category, data }) => {\r\n    return (\r\n        <PostList>\r\n            <div id=\"title\">\r\n                Recent \"<Link to={`/category/${category}`}>{category}</Link>\"\r\n                Posts\r\n            </div>\r\n            {data.map((node, index) => (\r\n                <RecentPostItem key={index} data={node} />\r\n            ))}\r\n        </PostList>\r\n    );\r\n};\r\n\r\nexport default RecentPostList;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport PostInfo from \"components/molecules/postInfo\";\r\nimport TagList from \"components/molecules/tagList\";\r\nimport RecentPostList from \"components/organisms/recentPostList\";\r\nimport Layout from \"./layout\";\r\nimport SEO from \"../seo\";\r\n\r\nconst PostHeader = styled.div`\r\n    h1 {\r\n        padding: 0;\r\n        margin-bottom: 10px;\r\n        border: none;\r\n        color: ${props => props.theme.blogpost.title};\r\n    }\r\n\r\n    hr {\r\n        margin: 20px 0 40px 0;\r\n        background-color: ${props => props.theme.blogpost.hr};\r\n    }\r\n\r\n    div {\r\n        color: ${props => props.theme.blogpost.info};\r\n        #circle {\r\n            background-color: ${props => props.theme.blogpost.info};\r\n        }\r\n    }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n    color: ${props => props.theme.blogpost.content.default};\r\n    a {\r\n        color: ${props => props.theme.blogpost.content.link};\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    .gatsby-highlight {\r\n        margin: 24px 0;\r\n        border-radius: 10px;\r\n        pre[class*=\"language-\"] {\r\n            padding: 10px 15px;\r\n        }\r\n    }\r\n\r\n    blockquote {\r\n        margin-left: 0;\r\n        margin-right: 0;\r\n        padding-left: calc(0.8125rem - 1px);\r\n        border-left: 4px solid ${props => props.theme.blogpost.content.quote};\r\n        color: ${props => props.theme.blogpost.content.quote};\r\n    }\r\n`;\r\n\r\nconst PostFooter = styled.div`\r\n    margin-top: 40px;\r\n\r\n    hr {\r\n        margin: 20px 0;\r\n        background-color: ${props => props.theme.blogpost.hr};\r\n    }\r\n`;\r\n\r\nclass BlogPost extends React.Component {\r\n    render() {\r\n        const post = this.props.data.markdownRemark;\r\n        const siteTitle = this.props.data.site.siteMetadata.title;\r\n        const {\r\n            title,\r\n            date,\r\n            category,\r\n            tags,\r\n            cover\r\n        } = this.props.data.markdownRemark.frontmatter;\r\n        const { recent } = this.props.pageContext;\r\n\r\n        return (\r\n            <Layout\r\n                location={this.props.location}\r\n                title={siteTitle}\r\n                activeMenu={category}\r\n            >\r\n                <SEO\r\n                    title={title}\r\n                    description={post.excerpt}\r\n                    image={!!cover && cover.childImageSharp.fluid.src}\r\n                    keywords={tags || []}\r\n                />\r\n\r\n                <PostHeader>\r\n                    <h1>{title}</h1>\r\n                    <PostInfo category={category} date={date} link={true} />\r\n                    <hr />\r\n                </PostHeader>\r\n\r\n                <PostContent>\r\n                    <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n                </PostContent>\r\n\r\n                <PostFooter>\r\n                    <TagList data={tags} />\r\n                    <hr />\r\n                    {category && (\r\n                        <RecentPostList category={category} data={recent} />\r\n                    )}\r\n                </PostFooter>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogPost;\r\n\r\nexport const pageQuery = graphql`\r\n    query BlogPostBySlug($slug: String!) {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                authorNickName\r\n            }\r\n        }\r\n        markdownRemark(fields: { slug: { eq: $slug } }) {\r\n            id\r\n            excerpt(pruneLength: 160)\r\n            html\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"YYYY-MM-DD\")\r\n                category\r\n                tags\r\n                cover {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 500) {\r\n                            src\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}